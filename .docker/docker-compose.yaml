services:
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ../frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - ENVIRONMENT=${ENVIRONMENT}
      - LOG_LEVEL=${LOG_LEVEL}
    networks:
      - prometheus-net
    restart: unless-stopped

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ../backend/app:/app/app
      - ../backend/static/swagger-ui-dark.css:/app/static/swagger-ui-dark.css:ro
      - /app/__pycache__
      - ../kerberos/krb5.keytab:${KRB_KTNAME}:ro
      - ../kerberos/krb5.conf:${KRB5_CONFIG}:ro
      - ../certs/idp-cert.pem:/etc/ssl//certs/idp-cert.pem:ro
      - ../certs/idp-key.pem:/etc/ssl/private/idp-key.pem:ro
      - ../certs/canvas-sp-cert.pem:/etc/ssl/certs/canvas-sp-cert.pem:ro
      - ../certs/ca-chain.pem:/etc/ssl/certs/ca-chain.pem:ro
    environment:
      - KRB5_KTNAME=${KRB_KTNAME}
      - KRB5_CONFIG=${KRB5_CONFIG}
      - KRB5_TRACE=${KRB5_TRACE}
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=${DATABASE_URL}
      - KRB_SERVICE=${KRB_SERVICE}
      - KRB_HOST=${KRB_HOST}
      - KRB_REALM=${KRB_REALM}
      - ENVIRONMENT=${ENVIRONMENT}
      - LOG_LEVEL=${LOG_LEVEL}
      - LDAP_SERVER=${LDAP_SERVER}
      - LDAP_USER=${LDAP_USER}
      - LDAP_PASSWORD=${LDAP_PASSWORD}
      - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-chain.pem
      - FRONTEND_URL=${FRONTEND_URL}
    networks:
      - prometheus-net
    depends_on:
      - postgres
    restart: unless-stopped

  canvas:
    build:
      context: "https://github.com/instructure/canvas-lms.git#prod"
      dockerfile: Dockerfile.production
    hostname: ${CANVAS_HOST_NAME}
    entrypoint: ["/usr/src/app/entrypoint.sh"]
    command: ["bundle", "exec", "passenger", "start", "--port", "80", "--environment", "production"]
    volumes:
      - ../canvas/entrypoint.sh:/usr/src/app/entrypoint.sh:ro
      - ../canvas/database.yml:/usr/src/app/config/database.yml:ro
      - ../canvas/security.yml:/usr/src/app/config/security.yml:ro
      - ../canvas/domain.yml:/usr/src/app/config/domain.yml:ro
      - ../canvas/session_store.yml:/usr/src/app/config/session_store.yml:ro
      - ../canvas/cache_store.yml:/usr/src/app/config/cache_store.yml:ro
      - ../canvas/redis.yml:/usr/src/app/config/redis.yml:ro
      - ../canvas/saml.yml:/usr/src/app/config/saml.yml:ro
      - ../certs/canvas-sp-cert.pem:/etc/ssl/certs/canvas-sp-cert.pem:ro
      - ../certs/canvas-sp-key.pem:/etc/ssl/private/canvas-sp-key.pem:ro
    environment:
      - CANVAS_PRODUCTION_DB=${CANVAS_PRODUCTION_DB}
      - CANVAS_DB_HOST=${CANVAS_DB_HOST}
      - CANVAS_DB_USERNAME=${CANVAS_DB_USERNAME}
      - CANVAS_DB_PASSWORD=${CANVAS_DB_PASSWORD}
      - CANVAS_ENCRYPTION_KEY=${CANVAS_ENCRYPTION_KEY}
      - CANVAS_LTI_ISS=${CANVAS_LTI_ISS}
      - CANVAS_DOMAIN=${CANVAS_DOMAIN}
      - CANVAS_SSL_ENABLED=${CANVAS_SSL_ENABLED}
      - CANVAS_LMS_ADMIN_EMAIL=${CANVAS_LMS_ADMIN_EMAIL}
      - CANVAS_LMS_ADMIN_PASSWORD=${CANVAS_LMS_ADMIN_PASSWORD}
      - CANVAS_LMS_ACCOUNT_NAME=${CANVAS_LMS_ACCOUNT_NAME}
      - CANVAS_LMS_STATS_COLLECTION=${CANVAS_LMS_STATS_COLLECTION}
      - CANVAS_SESSION_STORE=${CANVAS_SESSION_STORE}
      - CANVAS_SESSION_EXPIRE_AFTER=${CANVAS_SESSION_EXPIRE_AFTER}
      - CANVAS_SESSION_SECURE=${CANVAS_SESSION_SECURE}
      - CANVAS_SESSION_EXPIRE_REMEMBER_ME_AFTER=${CANVAS_SESSION_EXPIRE_REMEMBER_ME_AFTER}
    depends_on:
      - postgres
      - redis
    ports:
      - "8080:80"
    networks:
      - prometheus-net
    restart: unless-stopped

  redis:
    image: redis:latest
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - prometheus-net
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - postgres
    ports:
      - "5050:80"
    networks:
      - prometheus-net
    restart: unless-stopped

  postgres:
    image: postgres:17
    volumes:
      - ../postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - prometheus-net
    restart: unless-stopped

  nginx:
    build:
      context: ../nginx
      dockerfile: Dockerfile
    volumes:
      - ../certs/nginx-cert.pem:/etc/ssl/certs/nginx-cert.pem
      - ../certs/nginx-key.pem:/etc/ssl/private/nginx-key.pem
    environment:
      - FRONTEND_HOST_NAME=${FRONTEND_HOST_NAME}
      - PGADMIN_HOST_NAME=${PGADMIN_HOST_NAME}
      - CANVAS_HOST_NAME=${CANVAS_HOST_NAME}
    ports:
      - "80:80"
      - "443:443"
    networks:
      - prometheus-net
    restart: unless-stopped

volumes:
  postgres-data:
  prometheus-data:
  canvas-data:
  redis-data:

networks:
  prometheus-net:
    driver: bridge
