events {
    worker_connections 1024;
}

http {
    # Define upstreams for each service
    upstream frontend {
        server frontend:3000;
    }

    upstream backend {
        server backend:8000;
    }

    upstream pgadmin {
        server pgadmin:80;
    }

    # Main Production Frontend
    server {
        #listen 443 ssl;
        listen 80;
        server_name ${FRONTEND_HOST_NAME};

        #ssl_certificate     /etc/nginx/certs/server.crt;
        #ssl_certificate_key /etc/nginx/certs/server.key;
        #ssl_protocols       TLSv1.2 TLSv1.3;
        #ssl_ciphers         HIGH:!aNULL:!MD5;

        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }

    # Production Backend API
    server {
        #listen 443 ssl;
        listen 80;
        server_name ${BACKEND_HOST_NAME};

        #ssl_certificate     /etc/nginx/certs/server.crt;
        #ssl_certificate_key /etc/nginx/certs/server.key;
        #ssl_protocols       TLSv1.2 TLSv1.3;
        #ssl_ciphers         HIGH:!aNULL:!MD5;

        location / {
            proxy_pass http://backend;
            proxy_set_header Host ${BACKEND_HOST_NAME};
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
        }
        
        # Optional: explicitly forward documentation endpoints.
        location /docs {
            proxy_pass http://backend/docs;
        }
        
        location /redoc {
            proxy_pass http://backend/redoc;
        }
    }

    # Canvas Service
    server {
        #listen 443 ssl;
        listen 80;
        server_name ${CANVAS_HOST_NAME};

        #ssl_certificate     /etc/nginx/certs/server.crt;
        #ssl_certificate_key /etc/nginx/certs/server.key;
        #ssl_protocols       TLSv1.2 TLSv1.3;
        #ssl_ciphers         HIGH:!aNULL:!MD5;

        location / {
            # Proxy requests to the Canvas container (using Docker DNS)
            proxy_pass http://canvas:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # PGAdmin Interface
    server {
        #listen 443 ssl;
        listen 80;
        server_name ${PGADMIN_HOST_NAME};

        #ssl_certificate     /etc/nginx/certs/server.crt;
        #ssl_certificate_key /etc/nginx/certs/server.key;
        #ssl_protocols       TLSv1.2 TLSv1.3;
        #ssl_ciphers         HIGH:!aNULL:!MD5;

        location / {
            proxy_pass http://pgadmin;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_cookie_path / /;
        }
    }

    # HTTP to HTTPS redirect for all services
    #server {
    #    listen 80;
    #    server_name ${FRONTEND_HOST_NAME} ${BACKEND_HOST_NAME} ${CANVAS_HOST_NAME} ${PGADMIN_HOST_NAME};
    #    return 301 https://$host$request_uri;
    #}

    # Global Proxy Settings
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;
    
    # Required for Kerberos SPNEGO authentication
    proxy_http_version 1.1;
    proxy_set_header Connection "";
}
